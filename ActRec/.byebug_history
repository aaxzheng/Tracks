c
through_options
source_options
quit
s
k
s
k
c
k
c
self.send("#{k}=",val)
val
k
c
k
self.send("#{k}=",val)
self.send(k=,val)
self.send(k,val)
self
self.send("#{k}=",val)
self.send("#{k.to_sym}=",val)
k.to_sym
val
self.class.columns.include?(k)
self.class.columns.include(k)
k
quit
self.owner_id
self.id
self
self.id
self
options
quit
self.name
self.id
self.attributes[:owner_id]
self.owner_id
options.foreign_key
self
self.send(options.foreign_key)
self.send(option.foreign_key)
options.foreign_key
options
foreign
c
quit
self.attributes[:owner_id]
self.attributes[:name]
self.attributes[name]
self.attributes
self.attributes.name
self.name
self
self.send(:name)
self
self.send(foreign)
self.send(foreign_key)
self.send(name)
foreign
options.foreign_key
self.send('owner_id')
self.send(owner_id)
self.owner_id
self
self.send(:owner_id)
options.foreign_key
foreign
s
quit
options
quit
options.model_class
options
quit
options.foreign_key.to_s.delete("_id")
options.foreign_key.to_s
options.foreign_key
options['@foreign_key']
options[@foreign_key]
options
options['foreign_key']
options[:foreign_key]
options[foreign_key]
options.send(name)
options.model_class
options
name
quit
options[:foreign_key].to_s
options[:foreign_key].to_s.constantize
options[:foreign_key].to_s
options[:foreign_key].constantize
options[:primary_key]
options[:class_name]
options[:foreign_key]
"#{send.send(name)}_id"
self.send(name)_id
self.send(name)
options[:foreign_key]
name
quit
name
quit
parameters
c
parameters
